
def sa(a):
    if len(a)>=2:
        f=0
        f=a[0]
        a[0]=a[1]
        a[1]=f
    return a

def sb(b):
    if len(b)>=2:
        f=0
        f=b[0]
        b[0]=b[1]
        b[1]=f
    return b

def ss(a, b):
    return sa(a), sb(b)

def ra(sp):
    sp = sp[1:] + sp[:1]
    return sp

def rb(sp):
    sp = sp[1:] + sp[:1]
    return sp

def rr(sp1,sp2):
    sp1 = sp1[1:] + sp1[:1]
    sp2 = sp2[1:] + sp2[:1]
    return sp1, sp2

def rra(sp):
    sp = sp[-1:] + sp[:-1]
    return sp

def rrb(sp):
    sp = sp[-1:] + sp[:-1]
    return sp

def rrr(sp1, sp2):
    sp1 = rra(sp1)
    sp2 = rrb(sp2)
    return sp1, sp2

def pa(sp1, sp2):
    if len(sp2)!=0:
          sp1.insert(0, sp2[0])
          sp2 = sp2[1:]
    return sp1, sp2

def pb(sp1, sp2):
    sp2.insert(0, sp1[0])
    sp1 = sp1[1:]
    return sp1, sp2

def sorty(a):
    b = []
    if len(a) != 0:
          a, b = pb(a, b)

    while len(a)!=0:
        a,b=pb(a,b)
        if int(b[0])>int(b[1]) and int(b[0])>int(b[-1]):
            b = rb(b)
        if int(b[0])>int(b[1]) and int(b[0])<int(b[-1]):
            while int(b[0])>int(b[1]) and int(b[0])<int(b[-1]):
                b = rrb(b)
                a, b = pa(a, b)
                
                a = ra(a)
                
            b=rb(b)
            
    for i in range(len(b)):
        a=b
        
    return a

def Check_sortic():
    a = []
    b = []
    c = []
    i = 0
    sp =[]
    lop = input()
    while(lop!="*"):
        sp.append(lop)
        lop = input()
    sp.append("*")
    while sp[i] != '!':
        a.append(sp[i])
        i = i + 1
    i = i + 1
    while sp[i] != '*':
        c.append(sp[i])
        i = i + 1
    z = sorty(a)
    for i in range(len(c)):
        if c[i] == 'sa':
            a = sa(a)
        if c[i] == 'sb':
            b = sb(b)
        if c[i] == 'ss':
            ko = ss(a,b)
            a = ko[0]
            b = ko[1]
        if c[i] == 'pa':
            ko = pa(a,b)
            a = ko[0]
            b = ko[1]
        if c[i] == 'pb':
            ko = pb(a,b)
            a = ko[0]
            b = ko[1]
        if c[i] == 'ra':
            a = ra(a)
        if c[i] == 'rb':
            b = rb(b)
        if c[i] == 'rr':
            ko = rr(a,b)
            a = ko[0]
            b = ko[1]
        if c[i] == 'rra':
            a = rra(a)
        if c[i] == 'rrb':
            b = rrb(b)
        if c[i] == 'rrr':
            ko = rrr(a,b)
            a = ko[0]
            b = ko[1]
    reversed_z = z[::-1]
    if a == z or a == reversed_z:
        print(a,z, reversed_z)
        return("OK")
    else:
        print(a,z, reversed_z)
        return("KO")
      
def sortic():
    a = []
    c=input()
    while c!=("!"):
          a.append(c)
          c = input()
    b = []
    if len(a) != 0:
          a, b = pb(a, b)
          print("pb")
    
    while len(a)!=0:
        a,b=pb(a,b)
        print("pb")
        if int(b[0])>int(b[1]) and int(b[0])>int(b[-1]):
            b = rb(b)
            print("rb")
        if int(b[0])>int(b[1]) and int(b[0])<int(b[-1]):
            while int(b[0])>int(b[1]) and int(b[0])<int(b[-1]):
                b = rrb(b)
                print("rrb")
                a, b = pa(a, b)
                print("pa")
                a = ra(a)
                print("ra")
            b=rb(b)
            print("rb")
    for i in range(len(b)):
        a=b
        print("pa")
    return a
#print(sortic())
print(Check_sortic())



